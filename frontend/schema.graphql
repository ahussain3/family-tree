type AddChild {
  child: Person!
}

type AddMarriage {
  partnerA: Person!
  partnerB: Person!
}

type AddPerson {
  person: Person!
}

"""An enumeration."""
enum Gender {
  MALE
  FEMALE
}

type Mutation {
  addPerson(birthYear: Int, deathYear: Int, gender: Gender!, name: String!, residence: String): AddPerson!
  updatePerson(birthYear: Int, deathYear: Int, gender: Gender, id: ID!, name: String, residence: String): UpdatePerson!
  addMarriage(endYear: Int, partnerAId: ID!, partnerBId: ID!, startYear: Int): AddMarriage!
  addChild(childId: ID!, parentIds: [ID]!): AddChild!
}

"""A person in the family tree"""
type Person {
  id: ID!
  name: String!
  gender: Gender
  photoUrl: String
  residence: String
  birthYear: Int
  deathYear: Int
  parents: [Person]
  partners: [Person]
  children: [Person]
}

"""Top level GraphQL queryable objects"""
type Query {
  person(id: ID): Person
  searchPersons(name: String): [Person]
}

type UpdatePerson {
  person: Person!
}

